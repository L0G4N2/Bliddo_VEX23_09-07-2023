#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#include <math.h>
#include <string.h>

#include "vex.h"

using namespace vex;

//Brain should be defined by default
brain Brain;


void calibrateDrivetrain(void) {
  wait(200, msec);
  Brain.Screen.print("Calibrating");
  Brain.Screen.newLine();
  Brain.Screen.print("Inertial");
  DrivetrainInertial.calibrate();
  while (DrivetrainInertial.isCalibrating()) {
    wait(25, msec);
  }
}

void preAutonomous(void) {
  // actions to do when the program starts
  Brain.Screen.clearScreen();
  Brain.Screen.print("pre auton code");
  //Calibrating the Robot
  calibrateDrivetrain();
  Drivetrain.setDriveVelocity(85, percent);
  Drivetrain.setTurnVelocity(85, percent);
  Catapult.setMaxTorque(90, percent);
  Catapult.setVelocity(90, percent);
}

void autonomous(void) {
  Brain.Screen.clearScreen();
  Brain.Screen.print("autonomous code");
  CatapultLock.spin(reverse);
  wait(250, msec);
  CatapultLock.stop();
  Catapult.spin(forward);
  wait(5000, msec);
  Drivetrain.turnFor(left, 8, degrees);
  wait(5000, msec);
  Drivetrain.turnFor(left, 8, degrees);
  wait(5000, msec);
  while (true) {
    Drivetrain.drive(reverse);
    wait(500, msec);
    Drivetrain.stop();
    Drivetrain.turnFor(right, 10, degrees);
    wait(3500, msec);
  }
}
  // //90 degree turn with inertial sensor
  // Drivetrain.turn(right);
  // waitUntil((DrivetrainInertial.rotation(degrees) >= 90.0));
  // Drivetrain.stop();
  // wait(1, seconds);
  // //Drive forward for 0.7 seconds
  // Drivetrain.drive(forward);
  // wait(700, msec);
  // Drivetrain.stop();
  // //Drive whenever the roll is less than or equal to 0
  // Drivetrain.drive(forward);
  // waitUntil((DrivetrainInertial.orientation(roll, degrees) < 0));
  // Drivetrain.setDriveVelocity(60, pct);
  // Drivetrain.drive(forward);
  // wait(500, msec);
  // Drivetrain.stop();
  // wait(1, seconds);
  // Drivetrain.setDriveVelocity(50, pct);
  // //Drive forward for 0.7 seconds
  // Drivetrain.drive(reverse);
  // wait(700, msec);
  // Drivetrain.stop();